import {Component} from 'react'
import {v4 as uuidv4} from 'uuid'
import TagsButton from './components/Tags'
import TasksLists from './components/Tasks'

import './App.css'

// These are the lists used in the application. You can move them to any component needed.

const tagsList = [
  {
    optionId: 'HEALTH',
    displayText: 'Health',
  },
  {
    optionId: 'EDUCATION',
    displayText: 'Education',
  },
  {
    optionId: 'ENTERTAINMENT',
    displayText: 'Entertainment',
  },
  {
    optionId: 'SPORTS',
    displayText: 'Sports',
  },
  {
    optionId: 'TRAVEL',
    displayText: 'Travel',
  },
  {
    optionId: 'OTHERS',
    displayText: 'Others',
  },
]

// Replace your code here
class App extends Component {
  state = {taskList: [], inputTask: '', selectedTag: '', filteredList: []}

  onChageTaskInput = event => {
    this.setState({inputTask: event.target.value})
  }

  onChangeSelectedTag = event => {
    const {selectedTag} = this.state
    this.setState({selectedTag: event.target.value})
  }

  onClickSubmit = event => {
    event.preventDefault()
    const {inputTask, selectedTag} = this.state
    const updateTask = {
      id: uuidv4(),
      optionId: tagsList.optionId,
      taskTitle: inputTask,
      tagsName: selectedTag,
    }
    this.setState(prevState => ({
      taskList: [...prevState.taskList, updateTask],
      inputTask: '',
    }))
  }

  onClickTagButton = tagId => {
    const {taskList} = this.state
    this.setState(prevState => ({
      taskList: prevState.taskList.map(each => {
        if (each.optionId === tagId) {
          return each
        }
      }),
    }))
  }

  render() {
    const {taskList, inputTask} = this.state
    return (
      <div className="main-container">
        <form className="left-container" onSubmit={this.onClickSubmit}>
          <h1 className="main-heading">Create a task!</h1>
          <label className="label" htmlFor="taskName">
            Task
          </label>
          <input
            className="input"
            type="text"
            id="taskName"
            value={inputTask}
            placeholder="Enter the task here"
            onChange={this.onChageTaskInput}
          />
          <label htmlFor="tageCategory" className="label">
            Tags
          </label>
          <select
            id="tageCategory"
            className="input"
            onChange={this.onChangeSelectedTag}
          >
            {tagsList.map(eachTag => (
              <option key={eachTag.optionId} value={eachTag.displayText}>
                {eachTag.displayText}
              </option>
            ))}
          </select>
          <button className="Add-button" type="submit">
            Add Task
          </button>
        </form>
        <div className="right-container">
          <h1 className="tag-heading">Tag</h1>
          <ul className="unorderButtonTag">
            {tagsList.map(eachButton => (
              <TagsButton
                tagButtonDetails={eachButton}
                key={eachButton.optionId}
                onClickTagButton={this.onClickTagButton}
              />
            ))}
          </ul>
          <h1 className="tag-heading">Tasks</h1>
          <div className="list-container">
            {taskList.length === 0 ? (
              <p className="notask">No Tasks Added Yet</p>
            ) : (
              <ul className="task-list-container">
                {taskList.map(each => (
                  <TasksLists key={each.id} taskDetail={each} />
                ))}
              </ul>
            )}
          </div>
        </div>
      </div>
    )
  }
}

export default App



* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.main-container {
  display: flex;
  height: 100vh;
  width: 100vw;
  font-family: 'Roboto';
}
.left-container {
  width: 40%;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  background-color: #1a171d;
  padding: 50px;
}

.right-container {
  width: 60%;
  background-color: #000000;
  color: #f8f8f8;
  padding: 40px;
}

.main-heading {
  color: #f3aa4e;
  font-size: 30px;
  padding-bottom: 10px;
}

.label {
  font-size: 15px;
  align-self: flex-start;
  color: #ffffff;
  padding: 10px;
}

.input {
  width: 30vw;
  height: 40px;
  margin-bottom: 30px;
}

.Add-button {
  color: #f8f8f8;
  background-color: #f3aa4e;
  height: 40px;
  padding-left: 30px;
  padding-right: 30px;
  border: 0px;
  border-radius: 5px;
  margin-top: 10px;
}

.tag-heading {
  font-size: 20px;
}

.unorderButtonTag {
  display: flex;
  padding-left: 0px;
}

.notask {
  font-size: 20px;
  text-align: center;
  padding: 15%;
}

.task-list-container {
  list-style: none;
  display: flex;
  flex-direction: column;
  padding-left: 0px;
}



import './index.css'

const TagsButton = props => {
  const {tagButtonDetails, onClickTagButton} = props
  const {displayText, optionId} = tagButtonDetails

  const buttonClickes = () => {
    onClickTagButton(optionId)
  }

  return (
    <li className="orderList">
      <button className="clicked-button" type="button" onClick={buttonClickes}>
        {displayText}
      </button>
    </li>
  )
}

export default TagsButton




.orderList {
  list-style: none;
  margin-right: 10px;
}

.clicked-button {
  color: #f8f8f8;
  background-color: transparent;
  border: 1px solid #f3aa4e;
  height: 30px;
  padding-left: 10px;
  padding-right: 10px;
  border-radius: 20px;
}



import './index.css'

const TasksLists = props => {
  const {taskDetail} = props
  const {taskTitle, tagsName} = taskDetail
  return (
    <li className="list-task">
      <p className="task-para">{taskTitle}</p>
      <button className="button" type="button">
        {tagsName}
      </button>
    </li>
  )
}

export default TasksLists



.list-task {
  margin-bottom: 10px;
  height: 50px;
  width: 53vw;
  padding-left: 30px;
  padding-right: 30px;
  background-color: #1a171d;
  display: flex;
  justify-content: space-between;
}

.button {
  color: #f8f8f8;
  background-color: #f3aa4e;
  border: none;
  height: 30px;
  padding-left: 10px;
  padding-right: 10px;
  border-radius: 20px;
}
