import {Component} from 'react'
import Loader from 'react-loader-spinner'
import ListOfPlaces from './components/Place'

import './App.css'

class App extends Component {
  state = {travelDataList: [], isLoading: true}

  componentDidMount() {
    this.getFetchedApiData()
  }

  getFetchedApiData = async () => {
    const response = await fetch(' https://apis.ccbp.in/tg/packages')
    const data = await response.json()

    const updateData = data.packages.map(each => ({
      id: each.id,
      about: each.description,
      imgUrl: each.image_url,
      title: each.name,
    }))

    this.setState({travelDataList: updateData, isLoading: false})
  }

  render() {
    const {travelDataList, isLoading} = this.state

    return (
      <div className="main-container">
        <h1 className="main-heading">Travel Guide</h1>
        <hr className="hrLine" />
        {isLoading ? (
          <div data-testid="loader">
            <Loader type="TailSpin" color="#00BFFF" height={50} width={50} />
          </div>
        ) : (
          <div className="container">
            {travelDataList.map(eachPlace => (
              <ListOfPlaces placeDetails={eachPlace} key={eachPlace.id} />
            ))}
          </div>
        )}
      </div>
    )
  }
}

export default App




* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.main-container {
  height: 100%;
  min-height: 100vh;
  width: 100vw;
  display: flex;
  flex-direction: column;
  align-items: center;
  font-family: 'Roboto';
  background-color: #eef4f7;
}
.hrLine {
  width: 175px;
  border: 2px solid #52bbf0;
  margin-top: 0px;
}

.container {
  height: 100%;
  display: flex;
  flex-wrap: wrap;
  margin: 40px;
}



import './index.css'

const ListOfPlaces = props => {
  const {placeDetails} = props
  const {title, about, imgUrl} = placeDetails

  return (
    <div className="flexBoxes">
      <img src={imgUrl} alt={title} className="image" />
      <h1 className="heading">{title}</h1>
      <p className="paragraph">{about}</p>
    </div>
  )
}

export default ListOfPlaces




.image {
  width: 100%;
}

.flexBoxes {
  width: 45%;
  background-color: #ffffff;
  margin: 20px;
}
